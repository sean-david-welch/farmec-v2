package details

import (
	"fmt"
	"github.com/sean-david-welch/farmec-v2/server/types"
	"github.com/sean-david-welch/farmec-v2/server/views"
	"github.com/sean-david-welch/farmec-v2/server/views/components"
	"github.com/sean-david-welch/farmec-v2/server/views/layout"
)

// Function to get warranty detail mapping
func getWarrantyDetailsMap(warranty types.WarrantyClaim) map[string]interface{} {
	return map[string]interface{}{
		"dealer":          &warranty.Dealer,
		"dealer_contact":  warranty.DealerContact,
		"owner_name":      warranty.OwnerName,
		"machine_model":   warranty.MachineModel,
		"serial_number":   warranty.SerialNumber,
		"install_date":    warranty.InstallDate,
		"failure_date":    warranty.FailureDate,
		"repair_date":     warranty.RepairDate,
		"failure_details": warranty.FailureDetails,
		"repair_details":  warranty.RepairDetails,
		"labour_hours":    warranty.LabourHours,
		"completed_by":    warranty.CompletedBy,
	}
}

// Function to get warranty part details mapping
func getWarrantyPartDetailsMap(part types.PartsRequired) map[string]interface{} {
	return map[string]interface{}{
		"part_number":     &part.PartNumber,
		"quantity_needed": &part.QuantityNeeded,
		"invoice_number":  &part.InvoiceNumber,
		"description":     &part.Description,
	}
}

func getWarrantyDetailMetadata(warranty types.WarrantyClaim) views.Metadata {
    title := fmt.Sprintf("Warranty Claim: %s - %s", warranty.Dealer, *warranty.OwnerName)
    description := fmt.Sprintf("Warranty claim for %s by %s",
        *warranty.MachineModel,
        warranty.Dealer)

    return views.Metadata{
        Title:         title,
        Description:   description,
        OgTitle:       title,
        OgDescription: description,
        OgImage:       "", // No image for warranty claims
        OgUrl:         fmt.Sprintf("https://www.farmec.ie/warranty/%s", warranty.ID),
        TwitterTitle:  title,
        TwitterDesc:   description,
        TwitterImage:  "", // No image for warranty claims
        CanonicalUrl:  fmt.Sprintf("https://www.farmec.ie/warranty/%s", warranty.ID),
    }
}

templ warrantyDetailContent(isAdmin bool, isError bool, warranty types.WarrantyClaim, parts []types.PartsRequired) {
	if (isError) {
		@layout.ErrorComponent()
	} else {
		<section id="warranty-detail">
			<h1 class="section-heading">
				Warranty Claim: { warranty.Dealer } - { *warranty.OwnerName }
			</h1>
			<div class="warranty-detail">
				// Render warranty details
				for key, value := range getWarrantyDetailsMap(warranty) {
					<div class="warranty-grid">
						<div class="label">{ key }</div>
						<div class="value">{ fmt.Sprintf("%v", value) }</div>
					</div>
				}
				// Render parts details
				for _, part := range parts {
					for key, value := range getWarrantyPartDetailsMap(part) {
						<div class="warranty-grid">
							<div class="label">{ key }</div>
							<div class="value">{ fmt.Sprintf("%v", value) }</div>
						</div>
					}
				}
				// Admin options
				if (isAdmin) {
					<div class="options-btn">
						// @WarrantyForm(warranty.ID, warranty)
						@components.DeleteButton(warranty.ID, "warranty")
					</div>
				}
			</div>
			// @DownloadPdfButton(warranty, parts)
		</section>
	}
}

templ WarrantyDetail(isAdmin bool, isError bool, warranty types.WarrantyClaim, parts []types.PartsRequired, suppliers []types.Supplier) {
	@views.Base(
		warrantyDetailContent(isAdmin, isError, warranty, parts),
		getWarrantyDetailMetadata(warranty),
		[]string{"account.css"},
		suppliers,
	)
}
