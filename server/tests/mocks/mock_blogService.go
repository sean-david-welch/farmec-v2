// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/blogService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sean-david-welch/farmec-v2/server/types"
)

// MockBlogService is a mock of BlogService interface.
type MockBlogService struct {
	ctrl     *gomock.Controller
	recorder *MockBlogServiceMockRecorder
}

// MockBlogServiceMockRecorder is the mock recorder for MockBlogService.
type MockBlogServiceMockRecorder struct {
	mock *MockBlogService
}

// NewMockBlogService creates a new mock instance.
func NewMockBlogService(ctrl *gomock.Controller) *MockBlogService {
	mock := &MockBlogService{ctrl: ctrl}
	mock.recorder = &MockBlogServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogService) EXPECT() *MockBlogServiceMockRecorder {
	return m.recorder
}

// CreateBlog mocks base method.
func (m *MockBlogService) CreateBlog(blog *types.Blog) (*types.ModelResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBlog", blog)
	ret0, _ := ret[0].(*types.ModelResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBlog indicates an expected call of CreateBlog.
func (mr *MockBlogServiceMockRecorder) CreateBlog(blog interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlog", reflect.TypeOf((*MockBlogService)(nil).CreateBlog), blog)
}

// DeleteBlog mocks base method.
func (m *MockBlogService) DeleteBlog(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlog", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlog indicates an expected call of DeleteBlog.
func (mr *MockBlogServiceMockRecorder) DeleteBlog(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlog", reflect.TypeOf((*MockBlogService)(nil).DeleteBlog), id)
}

// GetBlogs mocks base method.
func (m *MockBlogService) GetBlogs() ([]types.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlogs")
	ret0, _ := ret[0].([]types.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlogs indicates an expected call of GetBlogs.
func (mr *MockBlogServiceMockRecorder) GetBlogs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlogs", reflect.TypeOf((*MockBlogService)(nil).GetBlogs))
}

// GetBlogsByID mocks base method.
func (m *MockBlogService) GetBlogsByID(id string) (*types.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlogsByID", id)
	ret0, _ := ret[0].(*types.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlogsByID indicates an expected call of GetBlogsByID.
func (mr *MockBlogServiceMockRecorder) GetBlogsByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlogsByID", reflect.TypeOf((*MockBlogService)(nil).GetBlogsByID), id)
}

// UpdateBlog mocks base method.
func (m *MockBlogService) UpdateBlog(id string, blog *types.Blog) (*types.ModelResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBlog", id, blog)
	ret0, _ := ret[0].(*types.ModelResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateBlog indicates an expected call of UpdateBlog.
func (mr *MockBlogServiceMockRecorder) UpdateBlog(id, blog interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBlog", reflect.TypeOf((*MockBlogService)(nil).UpdateBlog), id, blog)
}
