// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/blogRepository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sean-david-welch/farmec-v2/server/types"
)

// MockBlogRepository is a mock of BlogRepository interface.
type MockBlogRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlogRepositoryMockRecorder
}

// MockBlogRepositoryMockRecorder is the mock recorder for MockBlogRepository.
type MockBlogRepositoryMockRecorder struct {
	mock *MockBlogRepository
}

// NewMockBlogRepository creates a new mock instance.
func NewMockBlogRepository(ctrl *gomock.Controller) *MockBlogRepository {
	mock := &MockBlogRepository{ctrl: ctrl}
	mock.recorder = &MockBlogRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogRepository) EXPECT() *MockBlogRepositoryMockRecorder {
	return m.recorder
}

// CreateBlog mocks base method.
func (m *MockBlogRepository) CreateBlog(blog *types.Blog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBlog", blog)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBlog indicates an expected call of CreateBlog.
func (mr *MockBlogRepositoryMockRecorder) CreateBlog(blog interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlog", reflect.TypeOf((*MockBlogRepository)(nil).CreateBlog), blog)
}

// DeleteBlog mocks base method.
func (m *MockBlogRepository) DeleteBlog(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlog", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlog indicates an expected call of DeleteBlog.
func (mr *MockBlogRepositoryMockRecorder) DeleteBlog(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlog", reflect.TypeOf((*MockBlogRepository)(nil).DeleteBlog), id)
}

// GetBlogById mocks base method.
func (m *MockBlogRepository) GetBlogById(id string) (*types.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlogById", id)
	ret0, _ := ret[0].(*types.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlogById indicates an expected call of GetBlogById.
func (mr *MockBlogRepositoryMockRecorder) GetBlogById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlogById", reflect.TypeOf((*MockBlogRepository)(nil).GetBlogById), id)
}

// GetBlogs mocks base method.
func (m *MockBlogRepository) GetBlogs() ([]types.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlogs")
	ret0, _ := ret[0].([]types.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlogs indicates an expected call of GetBlogs.
func (mr *MockBlogRepositoryMockRecorder) GetBlogs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlogs", reflect.TypeOf((*MockBlogRepository)(nil).GetBlogs))
}

// UpdateBlog mocks base method.
func (m *MockBlogRepository) UpdateBlog(id string, blog *types.Blog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBlog", id, blog)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBlog indicates an expected call of UpdateBlog.
func (mr *MockBlogRepositoryMockRecorder) UpdateBlog(id, blog interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBlog", reflect.TypeOf((*MockBlogRepository)(nil).UpdateBlog), id, blog)
}
